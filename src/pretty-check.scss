$check-icon:    "\2714" !default;
// $icon-font:     -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji" !default;
$body-bg:       #000000 !default;
$input-disabled-bg: #dedede !default;

$border-color:  #ced4da !default;

$default:       #343a40 !default;

$primary:       #007bff !default;
$secondary:     #6c757d !default;
$success:       #28a745 !default;
$info:          #17a2b8 !default;
$warning:       #ffc107 !default;
$danger:        #dc3545 !default;

$theme-colors: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$theme-colors: map-merge(
  (
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "dark":       #f8f9fa,
  ),
  $theme-colors
);

@mixin checkbox-variant($theme, $color) {
  .checkbox-#{$theme} input[type="checkbox"]:checked + label,
  .checkbox-#{$theme} input[type="radio"]:checked + label {
    &::before {
      @if ($theme == 'dark') {
        background-color: transparent;
      } @else {
        background-color: $color;
      }
      border-color: $color;
    }
    &::after {
      color: #ffffff;
    }
  }
}

@mixin checkbox-variant-indeterminate($theme, $color) {
  .checkbox-#{$theme} input[type="checkbox"]:indeterminate + label,
  .checkbox-#{$theme} input[type="radio"]:indeterminate + label {
    &::before {
      background-color: $color;
      border-color: $color;
    }
    &::after {
      @if ($theme == 'dark') {
        background-color: #000000;
      } @else {
        background-color: #ffffff;
      }
    }
  }
}

.checkbox {
  cursor: default;
  padding-left: 1.5em;
  min-height: 1em;

  label{
    cursor: pointer;
    display: inline;
    vertical-align: top;
    position: relative;
    display: inline-block;
    line-height: 1;

    &::before{
      cursor: pointer;
      content: "";
      display: inline-block;
      position: absolute;
      width: calc(1em - 2px);
      height: calc(1em - 2px);
      top: 0;
      left: 0;
      margin-left: -1.5em;
      border: 1px solid $border-color;
      border-radius: 3px;
      background-color: transparent;
    //   @include transition(border 0.15s ease-in-out, color 0.15s ease-in-out);
    }

    &::after{
      cursor: pointer;
      display: inline-block;
      position: absolute;
      width: 1em;
      height: 1em;
      left: 0;
      top: 0;
      margin-left: -1.5em;
      color: $default;
      text-align: center;
      // font-family: $icon-font;
    }
  }

  input[type="checkbox"],
  input[type="radio"] {
    position: absolute;
    margin-left: 0;
    cursor: pointer;
    opacity: 0;
    z-index: 1;
    left: 0;

    &:focus + label::before{
      outline: none;
      outline-offset: -2px;
    }

    &:checked + label::after{
      content: $check-icon;
      animation-name: bounceIn;
      -webkit-animation-duration: 0.5s;
      animation-duration: 0.5s;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;
    }

    &:indeterminate + label::after{
      display: block;
      content: "";
      width: 0.6em;
      height: 2px;
      background-color: #000000;
      border-radius: 1px;
      margin-left: -1.3em;
      margin-top: calc(0.5em - 1px);
    }

    &:disabled + label{
      opacity: 0.65;

      &::before{
        background-color: $input-disabled-bg;
        cursor: not-allowed;
      }

      &::after{
        cursor: not-allowed;
      }
    }

  }

  &.checkbox-circle label::before{
    border-radius: 50%;
  }

  &.checkbox-flat label::before {
    border-radius: 0;
  }

  &.checkbox-inline{
    margin-top: 0;
  }
}

@each $theme, $color in $theme-colors {
  @include checkbox-variant($theme, $color);
  @include checkbox-variant-indeterminate($theme, $color);
}

// Radio
@mixin radio-variant($theme, $color) {
  .radio-#{$theme} input[type="radio"]{
    + label{
      &::after{
        background-color: $color;
      }
    }
    &:checked + label{
      &::before {
        border-color: $color;
      }
      &::after{
        background-color: $color;
      }
    }
  }
}

.radio{
  cursor: default;
  padding-left: 1.5em;

  label{
    cursor: pointer;
    vertical-align: top;
    position: relative;
    display: inline-block;
    line-height: 1;

    &::before{
      cursor: pointer;
      content: "";
      display: inline-block;
      position: absolute;
      width: calc(1em - 2px);
      height: calc(1em - 2px);
      top: 0;
      left: 0;
      margin-left: -1.5em;
      border: 1px solid $border-color;
      border-radius: 50%;
      background-color: transparent;
    //   @include transition(border 0.15s ease-in-out);
    }

    &::after{
      cursor: pointer;
      display: inline-block;
      position: absolute;
      content: " ";
      width: calc(1em - 6px);
      height: calc(1em - 6px);
      left: 3px;
      top: 3px;
      margin-left: -1.5em;
      border-radius: 50%;
      background-color: $default;
      transform: scale(0, 0);

      transition: transform .1s cubic-bezier(.8,-0.33,.2,1.33);
      //curve - http://cubic-bezier.com/#.8,-0.33,.2,1.33
    }
  }

  input[type="radio"]{
    position: absolute;
    left: 0;
    margin-left: 0;
    cursor: pointer;
    opacity: 0;
    z-index: 1;

    &:focus + label::before{
      outline: none;
      outline-offset: -2px;
    }

    &:checked + label::after{
      transform: scale(1, 1);
      animation-name: zoomIn;
      -webkit-animation-duration: 0.5s;
      animation-duration: 0.5s;
      -webkit-animation-fill-mode: both;
      animation-fill-mode: both;
    }

    &:disabled + label{
      opacity: 0.65;

      &::before{
        cursor: not-allowed;
      }

      &::after{
        cursor: not-allowed;
      }
    }

  }

  &.radio-inline{
    margin-top: 0;
  }
}

@each $theme, $color in $theme-colors {
  @include radio-variant($theme, $color);
}